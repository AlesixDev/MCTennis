name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development  ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Build Java Application
        run: |
          chmod +x gradlew
          ./gradlew build shadowJar
          echo "RELEASE_VERSION=$(./gradlew -q printVersion)" >> $GITHUB_ENV
          
      - name: Create Github Release
        if: "contains(github.event.head_commit.message, '--release') && contains(github.ref, 'main')"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "This release was automatically created by Github Actions. Please wait until the author manually sets the patchnotes for this release."
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Bukkit Release to Github
        if: "contains(github.event.head_commit.message, '--release') && contains(github.ref, 'main')"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/MCTennis/MCTennis/build/libs/mctennis-${{ env.RELEASE_VERSION }}.jar
          asset_name: MCTennis.jar
          asset_content_type: application/jar     
          
  Wiki:
    runs-on: ubuntu-latest
    if: "contains(github.ref, 'main')"
    steps:
      - uses: actions/checkout@v2
      - name: Create Wiki
        uses: Shynixn/sphinx-rdt-wiki-action@v1.0.0
        with:
          source-dir: "docs/source"
          target-dir: "docs/build"
          github-secret: ${{ secrets.GITHUB_TOKEN }}      
